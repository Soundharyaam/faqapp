{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/add-question/add-question.component.css","webpack:///./src/app/components/add-question/add-question.component.html","webpack:///./src/app/components/add-question/add-question.component.ts","webpack:///./src/app/components/navbar/navbar.component.css","webpack:///./src/app/components/navbar/navbar.component.html","webpack:///./src/app/components/navbar/navbar.component.ts","webpack:///./src/app/components/question-list/question-list.component.css","webpack:///./src/app/components/question-list/question-list.component.html","webpack:///./src/app/components/question-list/question-list.component.ts","webpack:///./src/app/components/question/question.component.css","webpack:///./src/app/components/question/question.component.html","webpack:///./src/app/components/question/question.component.ts","webpack:///./src/app/services/data.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<div class=\\\"container\\\">\\n    <app-question-list></app-question-list>\\n</div>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'faqapp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { NavbarComponent } from './components/navbar/navbar.component';\nimport { QuestionListComponent } from './components/question-list/question-list.component';\nimport { QuestionComponent } from './components/question/question.component';\nimport { DataService } from './services/data.service';\nimport { AddQuestionComponent } from './components/add-question/add-question.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    NavbarComponent,\n    QuestionListComponent,\n    QuestionComponent,\n    AddQuestionComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule\n  ],\n  providers: [DataService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvYWRkLXF1ZXN0aW9uL2FkZC1xdWVzdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">\\n      Add New FAQ\\n    </div>\\n    <div class=\\\"card-block\\\">\\n      <form (submit)=\\\"addQuestion()\\\">\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"text\\\">Question Text</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"text\\\" name=\\\"text\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <label for=\\\"text\\\">Question Answer</label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"answer\\\" name=\\\"answer\\\">\\n        </div>\\n        <input type=\\\"submit\\\" class=\\\"btn btn-primary\\\" value=\\\"Submit\\\">\\n      </form>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit, Output, EventEmitter } from '@angular/core';\nimport { Question } from '../../models/Question';\n\n@Component({\n  selector: 'app-add-question',\n  templateUrl: './add-question.component.html',\n  styleUrls: ['./add-question.component.css']\n})\nexport class AddQuestionComponent implements OnInit {\n  @Output() questionAdded = new EventEmitter<Question>();\n  text : string;\n  answer: string;\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  addQuestion(){\n    this.questionAdded.emit({text:this.text, answer:this.answer,hide:true});\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<nav class=\\\"navbar navbar-expand-md navbar-inverse bg-inverse\\\">\\n  <div class=\\\"container\\\">\\n    <!-- <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarsExampleDefault\\\" aria-controls=\\\"navbarsExampleDefault\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n        <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button> -->\\n    <a class=\\\"navbar-brand\\\" href=\\\"#\\\">FAQ App</a>\\n  <div class=\\\"collapse navbar-collapse\\\" id=\\\"navbarsExampleDefault\\\">\\n    <ul class=\\\"navbar-nav mr-auto\\\">\\n    </ul>\\n  </div>\\n\\n</div>\\n</nav>\\n<br>\\n<br>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlc3Rpb24tbGlzdC9xdWVzdGlvbi1saXN0LmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<app-add-question (questionAdded)=\\\"addQuestion($event)\\\"></app-add-question>\\n<hr>\\n<!-- <br/> -->\\n<app-question *ngFor=\\\"let question of questions\\\" [question]=\\\"question\\\"></app-question>\"","import { Component, OnInit } from '@angular/core';\nimport {DataService} from '../../services/data.service';\nimport {Question} from '../../models/Question';\n@Component({\n  selector: 'app-question-list',\n  templateUrl: './question-list.component.html',\n  styleUrls: ['./question-list.component.css']\n})\nexport class QuestionListComponent implements OnInit {\n\n  questions:Object[];\n\n  constructor(public dataService:DataService) { \n  }\n\n  ngOnInit() {\n    this.questions=this.dataService.getQuestions();\n  }\n\n  addQuestion(question:Question){\n    this.dataService.addQuestion(question);\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbXBvbmVudHMvcXVlc3Rpb24vcXVlc3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div class=\\\"question\\\">\\n  <div class=\\\"card\\\">\\n    <div class=\\\"card-header\\\">{{question.text}} <a href=\\\"#\\\" class=\\\"btn btn-link\\\" (click)=\\\"question.hide=!question.hide\\\">Show</a> | \\n      <a href=\\\"#\\\" class=\\\"btn btn-link\\\" (click)=\\\"removeQuestion(question)\\\">Remove</a>\\n    </div>\\n    <div class=\\\"card-block\\\" [hidden]=\\\"question.hide\\\">\\n      <p class=\\\"card-text\\\">{{question.answer}}</p>\\n    </div>\\n  </div>\\n  <br>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { Question } from '../../models/Question';\nimport { DataService } from '../../services/data.service';\n\n@Component({\n  selector: 'app-question',\n  templateUrl: './question.component.html',\n  styleUrls: ['./question.component.css']\n})\nexport class QuestionComponent implements OnInit {\n\n  @Input('question') question: Question;\n\n  constructor(public dataService:DataService) { }\n\n  ngOnInit() {\n  }\n\n  removeQuestion(question){\n    this.dataService.removeQuestion(question);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Question } from \"../models/Question\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataService {\n  questions:Question[];\n  constructor() { \n    \n  }\n\n  //Get Question from LS\n  getQuestions(){\n    if(localStorage.getItem('questions')===null){\n      this.questions=[];\n    }\n    else{\n      this.questions=JSON.parse(localStorage.getItem('questions'));\n    }\n    return this.questions;\n  }\n\n  //Add Question from LS\n  addQuestion(question:Question){\n    this.questions.unshift(question);\n\n    let questions;\n    if(localStorage.getItem('questions')===null){\n      questions=[];\n      questions.unshift(question);\n      localStorage.setItem('questions',JSON.stringify(questions));\n    }\n    else{\n      questions=JSON.parse(localStorage.getItem('questions'));\n      questions.unshift(question);\n      localStorage.setItem('questions',JSON.stringify(questions));    \n    }\n\n  }\n  \n  //Remove Question from LS\n  removeQuestion(question: Question){\n    for(let i=0;i<this.questions.length;i++){\n      if(question == this.questions[i]){\n        this.questions.splice(i,1);\n        localStorage.setItem('questions', JSON.stringify(this.questions));\n      }\n    }\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}